// <auto-generated />
using System;
using IpAddressInfo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IpAddressInfo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IpAddressInfo.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "Greece",
                            ThreeLetterCode = "GRC",
                            TwoLetterCode = "GR"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "Germany",
                            ThreeLetterCode = "DEU",
                            TwoLetterCode = "DE"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "Cyprus",
                            ThreeLetterCode = "CYP",
                            TwoLetterCode = "CY"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "United States",
                            ThreeLetterCode = "USA",
                            TwoLetterCode = "US"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "Spain",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "France",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "Italy",
                            ThreeLetterCode = "ITA",
                            TwoLetterCode = "IT"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "Japan",
                            ThreeLetterCode = "JPN",
                            TwoLetterCode = "JP"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 10, 12, 6, 46, 10, 500, DateTimeKind.Utc),
                            Name = "China",
                            ThreeLetterCode = "CHN",
                            TwoLetterCode = "CN"
                        });
                });

            modelBuilder.Entity("IpAddressInfo.Entities.IPAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("IPAddresses");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "44.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 2,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "45.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "46.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 4,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "47.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 6,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "49.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 7,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "41.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 8,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "42.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 9,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "43.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 10,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660),
                            IP = "50.255.255.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 6, 856, DateTimeKind.Utc).AddTicks(6660)
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 1,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "44.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 2,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "45.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 3,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "46.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 4,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "47.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 6,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "49.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 7,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "41.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 8,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "42.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 9,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "43.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 10,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc),
                            IP = "50.25.55.254",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 33, 380, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 1,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "44.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 2,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "45.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 3,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "46.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 4,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "47.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 6,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "49.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 7,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "41.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 8,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "42.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 9,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "43.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 10,
                            CreatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330),
                            IP = "50.25.55.4",
                            UpdatedAt = new DateTime(2022, 10, 12, 7, 4, 51, 323, DateTimeKind.Utc).AddTicks(3330)
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 1,
                            CreatedAt = new DateTime(2022, 10, 12, 8, 41, 37, 310, DateTimeKind.Utc),
                            IP = "10.20.30.40",
                            UpdatedAt = new DateTime(2022, 10, 12, 8, 41, 37, 310, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("IpAddressInfo.Entities.IPAddress", b =>
                {
                    b.HasOne("IpAddressInfo.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
